#
# Prepare for release
#
# 参考: https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
#
name: prepare for release

on:
  workflow_run:
    workflows:
      - unittest
    branches:
      - release
    types:
      - completed

jobs:
  build_docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: build document using sphinx
        run: |
          pip install sphinx
          sphinx-build doc_sources/ docs/

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "automated document building"

  auto_versioning:
    needs: build_docs
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Generate next version identifier
        run: |
          CURRENT_FULL_VERSION=`cat setup.cfg | sed -rn "s/version=(.*)/\1/p"`
          CURRENT_PATCH_VERSION=`echo ${CURRENT_FULL_VERSION} | sed -r 's/^.+\..+\.(.*)$/\1/'`
          NEXT_PATCH_VERSION=$(( ${CURRENT_PATCH_VERSION}+1 ))
          NEXT_FULL_VERSION=`echo ${CURRENT_FULL_VERSION} | sed -r "s/^(.+)\.(.+)\..*$/\1.\2.${NEXT_PATCH_VERSION}/"`
          echo "Update: ${CURRENT_FULL_VERSION} -> ${NEXT_FULL_VERSION}"
          echo "next_full_version=${NEXT_FULL_VERSION}" >> $GITHUB_ENV

      - name: Modify files
        run: |
          sed -i -e "s/version=.*/version=${{ env.next_full_version }}/" setup.cfg
          sed -i -e "s/version =.*/version = \"${{ env.next_full_version }}\"/" src/blueprintpy/core/__init__.py

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "automated versioning"
